First it will match the 0th index of pattern with the 0th index of the given text which is ‘m’ with ‘a’.
Since they don’t match, we move to the next index of the text and we’ll compare ‘m’  with ‘c’, again it’s not a match. Then, again we will move to the next index and compare ‘m’ with the next index value which is ‘m’ now it’s a match then we move to the next index and search for more matches and compare ‘a’ with the next index value which is ‘a’ . So , again it’s a match and then we move to the next index and move to the next index and compare ‘l’ with ‘l’ .Finally, the whole substring matches and the and we would get 2 which is the index at which the substring exists. Time complexity in the worst case is O(m*n). Where m and n are the length of S and P respectively.
